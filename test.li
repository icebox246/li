// Examples in li

// simple string printing
$ println "Hello, li!"

$ println "========="

// function computing a ^ b
fn pow a b => 
	if b == 0 __return := 1
	else {
		__return := a * (pow a (b - 1))
	}

$ print "3 ^ 5 = "
$ println pow 3 5

$ println "========="

// function printing numbers from range a .. b
fn print_range a b => 
	if a <= b {
		$ print a	
		if a != b 
			$ print ", "
		$ print_range (a+1) b
	}

$ print_range 1 3
$ println ""

$ println "========="

// examples on string manipulation
let str := "Hello World!"
$ println str

let str1 := substr str 6 5
$ println str1

$ print "'W' = "
$ println char_at str1 0


// function which calculates length of string
fn strlen str => {
	fn __strlen str i => {
		if (char_at str i) == 0 
			__return := i
		else
			__return := __strlen str (i+1)
	}
	__return := __strlen str 0
}

$ print "length of '" + str + "' is " $println strlen str

$ println "========="

// function which converts string to int
fn stoi str => {
	let len := strlen str
	fn __stoi i res => {
		if i < len {
			res *= 10	
			res += (char_at str i) - '0'
			__return := __stoi (i+1) res
		} else 
			__return := res
	}
	__return := __stoi 0 0
}

let sth := "3124"
$print sth + " + 1 = "
$println (stoi sth) + 1

// a % b
fn mod a b => {
	__return := a - ((a / b) * b)
}

// function which converts int to string
fn itos n => {
	if n == 0 __return := "0"
	else {
		fn __itos n => {
			__return := ""
			if n > 0 {
				let c := (mod n 10) + '0'
				__return := (__itos (n/10)) + string_of_char c
			}
		}
		__return := __itos n
	}
}

if (itos stoi sth) == sth 
	$ println "stoi and itos it works!"

// fizzbuzz

fn fizzbuzz n => {
	fn __fizzbuzz i =>
		if i <= n {
			if (mod i 15) == 0 
				$ print "FizzBuzz"
			else if (mod i 3) == 0
				$ print "Fizz"
			else if (mod i 5) == 0
				$ print "Buzz"
			else
				$ print i

			if i < n
				$ print ", "

			$ __fizzbuzz i + 1
		}
	$ __fizzbuzz 1
}

$ fizzbuzz 20
$ println ""
