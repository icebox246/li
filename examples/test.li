// Examples in li

// simple string printing
$ println "Hello, li!"

$ println "========="

// function computing a ^ b
fn pow a:int b:int => int {
	if b == 0 return 1
	return a * (pow a (b - 1))
}

$ print "3 ^ 5 = "
$ println pow 3 5

$ println "========="

// function printing numbers from range a .. b
fn print_range a:int b:int => null
	if a <= b {
		$ print a	
		if a != b 
			$ print ", "
		$ print_range (a+1) b
	}

$ print_range 1 3
$ println ""

$ println "========="

// examples on string manipulation
let str = "Hello World!"
$ println str

let str1 = substr str 6 5
$ println str1

$ print "'W' = "
$ println char_at str1 0


// function which calculates length of string
fn strlen str:string => int {
	let len = 0
	while (char_at str len) != 0
		len += 1
	return len
}

$ print "length of '" + str + "' is " $println strlen str

$ println "========="

// function which converts string to int
fn stoi str:string => int {
	let len = strlen str
	let res = 0
	let i = 0
	while i < len {
		res *= 10
		res += (char_at str i) - '0'
		i += 1
	}
	return res
}

let sth = "3124"
$print sth + " + 1 = "
$println (stoi sth) + 1

// a % b
fn mod a:int b:int => int 
	return a - ((a / b) * b)


// function which converts int to string
fn itos n:int => string {
	if n == 0 return "0"

	fn __itos n:int => string {
		if n > 0 {
			let c = (mod n 10) + '0'
			return (__itos (n/10)) + string_of_char c
		}
		return ""
	}

	return __itos n
}

if (itos stoi sth) == sth 
	$ println "stoi and itos it works!"

$ println "========="

// fizzbuzz

fn fizzbuzz n:int => null {
	let i = 0
	while i <= n {
		i += 1
		if (mod i 15) == 0
			$ print "FizzBuzz"
		else if (mod i 3) == 0
			$ print "Fizz"
		else if (mod i 5) == 0
			$ print "Buzz"
		else
			$ print i
		if i < n
			$ print ", "
	}
}

$ fizzbuzz 20
$ println ""
